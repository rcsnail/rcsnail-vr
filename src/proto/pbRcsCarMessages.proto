// Messages sent between the car and driver
syntax = "proto3";
package rcsCar;


message CarCommand {
  enum Flags {
    NONE = 0;
    LIGHTS_LEFT = 1;
    LIGHTS_RIGHT = 2;
    SIDELIGHTS = 4;
    HEADLIGHTS = 8;
    HEADLIGHTS_FULL = 16;
    LIGHTS_FOG = 32;    
    HORN = 64;
  }

  float steering = 1;
  sint32 gear = 2;
  float throttle = 3;
  float braking = 4;
  int64 messageTime = 5;
  int64 lastRecvMessageTime = 6;
  string debugStr = 7;
  bytes customState = 8;
  int32 packetNo = 9; 
  fixed32 flags = 10;  // bit field of Flags
}

message CarResponse {
  float steering = 1;
  sint32 gear = 2;
  float throttle = 3;
  float braking = 4;
  int64 messageTime = 5;
  int64 lastRecvMessageTime = 6;
  int32 batVoltage_mV = 7;
  int32 steeringAdc = 8;
  int64 carTimestamp = 9;
  string debugRespStr = 10;
  bytes customResponse = 11;
  int32 responseDelay = 12;  // known delay between received command and sent response
  int32 lastRecvPacketNo = 13;
  float speed = 14;          // vehicle speed m/s
}
